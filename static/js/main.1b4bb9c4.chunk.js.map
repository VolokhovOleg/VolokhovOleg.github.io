{"version":3,"sources":["reducer/name-space.js","reducer/data/selectors.js","reducer/data/actions.js","utils.js","reducer/data/data.js","api.js","components/App/App.jsx","reducer/reducer.js","index.js"],"names":["NameSpace","DATA","NAME_SPACE","getData","state","data","ActionType","ActionCreator","type","payload","extend","a","b","Object","assign","initialState","Operation","dispatch","getState","createAPI","api","axios","create","baseURL","timeout","interceptors","response","use","err","connect","increase","DataOperation","onClick","fetch","then","window","open","url","catch","error","combineReducers","action","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","ReactDOM","render","document","getElementById"],"mappings":"iLAIeA,EAJG,CAChBC,KAAK,QCCDC,EAAaF,EAAUC,KAEvBE,EAAU,SAACC,GACf,OAAOA,EAAMF,GAAYG,MCLrBC,EACC,OAGDC,EACK,SAACF,GAAD,MAAW,CAClBG,KAAMF,EACNG,QAASJ,ICPPK,EAAS,SAACC,EAAGC,GACjB,OAAOC,OAAOC,OAAO,GAAIH,EAAGC,ICGxBV,EAAaF,EAAUC,KAEvBc,EAAe,CACnBV,KAAM,GAYFW,EACK,kBAAM,SAACC,EAAUC,GACxB,OAAOD,EAASV,IAAwBW,IAAWhB,GAAYG,S,iBCnBtDc,EAAY,WACvB,IAAMC,EAAMC,IAAMC,OAAO,CACvBC,QAAQ,qKACRC,QAAS,MAWX,OAFAJ,EAAIK,aAAaC,SAASC,KANR,SAACD,GAAD,OAAcA,KAEjB,SAACE,GACd,MAAMA,KAKDR,GCqBMS,GA/BHV,IA+BGU,aAXS,SAACzB,GAAD,MAAY,CAChCC,KAAMF,EAAQC,OAGS,SAACa,GAAD,MAAe,CACtCa,SADsC,WAElCb,EAASc,SAKFF,EA7BH,SAAC,GAAqB,EAApBC,SAAqB,IAAXzB,EAAU,EAAVA,KAUpB,OAAO,oCACL,uFAAgBA,GAChB,4BAAQ2B,QAAS,WAVfC,MAAM,uKACDC,MAAK,SAACR,GACHS,OAAOC,KAAKV,EAASW,QAExBC,OAAM,SAACC,GACJ,MAAMA,MAOb/B,KAAM,UAFT,uC,+BChBSgC,4BAAgB,eAC5BxC,EAAUC,MHKG,WAAmC,IAAlCG,EAAiC,uDAAzBW,EAAc0B,EAAW,uCAChD,OAAQA,EAAOjC,MACb,KAAKF,EACH,OAAOI,EAAON,EAAO,CAACC,KAAMoC,EAAOhC,UAGvC,OAAOL,M,gBINHgB,EAAMD,IAENuB,EAAQC,sBACVC,EACAC,8BACIC,0BAAgBC,IAAMC,kBAAkB5B,MAIhD6B,IAASC,OACP,kBAAC,IAAD,CAAUR,MAAOA,GACf,kBAAC,EAAD,OAEFS,SAASC,eAAe,W","file":"static/js/main.1b4bb9c4.chunk.js","sourcesContent":["const NameSpace = {\n  DATA: `DATA`,\n};\n\nexport default NameSpace;\n","import NameSpace from '../name-space';\n\nconst NAME_SPACE = NameSpace.DATA;\n\nconst getData = (state) => {\n  return state[NAME_SPACE].data;\n};\n\nexport {getData};\n","const ActionType = {\n  NAME: `NAME`,\n};\n\nconst ActionCreator = {\n  setData: (data) => ({\n    type: ActionType.NAME,\n    payload: data,\n  }),\n};\n\nexport {ActionType, ActionCreator};\n","const extend = (a, b) => {\n  return Object.assign({}, a, b);\n};\n\nexport {extend};\n","import {ActionType, ActionCreator} from './actions';\nimport NameSpace from '../name-space';\nimport {extend} from '../../utils';\n\nconst NAME_SPACE = NameSpace.DATA;\n\nconst initialState = {\n  data: 0,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.NAME:\n      return extend(state, {data: action.payload});\n  }\n\n  return state;\n};\n\nconst Operation = {\n  setData: () => (dispatch, getState) => {\n    return dispatch(ActionCreator.setData(++getState()[NAME_SPACE].data));\n  },\n};\n\nexport {reducer, Operation, ActionType, ActionCreator};\n","import axios from 'axios';\n\nexport const createAPI = () => {\n  const api = axios.create({\n    baseURL: `https://api.instagram.com/oauth/authorize?client_id=1576420319199590&redirect_uri=https://volokhovoleg.github.io/&scope=user_profile,user_media&response_type=code`,\n    timeout: 5000,\n  });\n\n  const onSuccess = (response) => response;\n\n  const onFail = (err) => {\n    throw err;\n  };\n\n  api.interceptors.response.use(onSuccess, onFail);\n\n  return api;\n};\n","import React, { useState, useEffect }  from 'react';\nimport {connect} from 'react-redux';\nimport {getData} from '../../reducer/data/selectors'\nimport {Operation as DataOperation} from '../../reducer/data/data';\nimport {createAPI} from '../../api';\n\nconst api = createAPI();\n\nconst App = ({increase, data}) => {\n    const redirect = () => {\n        fetch(`https://api.instagram.com/oauth/authorize?client_id=1576420319199590&redirect_uri=https://volokhovoleg.github.io/&scope=user_profile,user_media&response_type=code/`)\n            .then((response) => {\n                window.open(response.url);\n            })\n            .catch((error) => {\n                throw error;\n            });\n    };\n    return <>\n      <h1>Нажато раз {data}</h1>\n      <button onClick={()=> {\n          redirect();\n      }} type={\"button\"}>Нажми</button>\n    </>;\n};\n\nconst mapStateToProps = (state) => ({\n    data: getData(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    increase() {\n        dispatch(DataOperation.setData());\n    }\n});\n\nexport {App};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {combineReducers} from 'redux';\nimport {reducer as data} from './data/data';\nimport NameSpace from './name-space';\n\nexport default combineReducers({\n  [NameSpace.DATA]: data,\n});\n","import React from 'react';\nimport App from './components/App/App.jsx';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducer/reducer';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport {createAPI} from './api';\n\nconst api = createAPI();\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk.withExtraArgument(api))\n    )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}