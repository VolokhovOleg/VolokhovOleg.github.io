{"version":3,"sources":["reducer/name-space.js","reducer/data/selectors.js","reducer/data/actions.js","utils.js","reducer/data/data.js","components/App/App.jsx","reducer/reducer.js","index.js"],"names":["NameSpace","DATA","NAME_SPACE","getCode","state","code","ActionType","ActionCreator","type","payload","extend","a","b","Object","assign","initialState","Operation","dispatch","getState","fetch","method","body","then","response","console","log","catch","error","connect","setCode","DataOperation","useEffect","URLSearchParams","window","location","search","has","get","onClick","open","url","combineReducers","action","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","ReactDOM","render","document","getElementById"],"mappings":"iLAIeA,EAJG,CAChBC,KAAK,QCCDC,EAAaF,EAAUC,KAEvBE,EAAU,SAACC,GACf,OAAOA,EAAMF,GAAYG,MCLrBC,EACC,OAGDC,EACK,SAACF,GAAD,MAAW,CAClBG,KAAMF,EACNG,QAASJ,ICPPK,EAAS,SAACC,EAAGC,GACjB,OAAOC,OAAOC,OAAO,GAAIH,EAAGC,ICKxBG,EAAe,CACnBV,KAAM,MAYFW,EACK,SAACX,GAAD,OAAU,SAACY,EAAUC,GAC1BD,EAASV,EAAsBF,IAE/Bc,MAAM,+CAAgD,CAACC,OAAO,OAASC,KAAK,6JAAD,OAA+JhB,KACrOiB,MAAK,SAACC,GAAD,OAAcC,QAAQC,IAAIF,MAC/BG,OAAM,SAACC,GACJ,MAAMA,OCeLC,eAXS,SAACxB,GAAD,MAAY,CAChCC,KAAMF,EAAQC,OAGS,SAACa,GAAD,MAAe,CACtCY,QADsC,SAC9BxB,GACJY,EAASa,EAAsBzB,QAKxBuB,EApCH,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,QAAmB,EAAVxB,KAkBnB,OAPA0B,qBAAU,WAEF,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAA5C,SACGP,EAAQ,IAAIG,gBAAgBC,OAAOC,SAASC,QAAQE,IAA5C,WAEhB,IAEI,oCACL,4BAAQC,QAAS,WAjBfnB,MAAM,sKACDG,MAAK,SAACC,GACHU,OAAOM,KAAKhB,EAASiB,QAExBd,OAAM,SAACC,GACJ,MAAMA,MAcbnB,KAAM,UAFT,4H,8BCpBSiC,4BAAgB,eAC5BzC,EAAUC,MFKG,WAAmC,IAAlCG,EAAiC,uDAAzBW,EAAc2B,EAAW,uCAChD,OAAQA,EAAOlC,MACb,KAAKF,EACH,OAAOI,EAAON,EAAO,CAACC,KAAMqC,EAAOjC,UAGvC,OAAOL,M,gBGPHuC,EAAQC,sBACVC,EACAC,8BACIC,0BAAgBC,IAAMC,uBAI9BC,IAASC,OACP,kBAAC,IAAD,CAAUR,MAAOA,GACf,kBAAC,EAAD,OAEFS,SAASC,eAAe,W","file":"static/js/main.0a5b7476.chunk.js","sourcesContent":["const NameSpace = {\n  DATA: `DATA`,\n};\n\nexport default NameSpace;\n","import NameSpace from '../name-space';\n\nconst NAME_SPACE = NameSpace.DATA;\n\nconst getCode = (state) => {\n  return state[NAME_SPACE].code;\n};\n\nexport {getCode};\n","const ActionType = {\n  CODE: `CODE`,\n};\n\nconst ActionCreator = {\n  setCode: (code) => ({\n    type: ActionType.CODE,\n    payload: code,\n  }),\n};\n\nexport {ActionType, ActionCreator};\n","const extend = (a, b) => {\n  return Object.assign({}, a, b);\n};\n\nexport {extend};\n","import {ActionType, ActionCreator} from './actions';\nimport NameSpace from '../name-space';\nimport {extend} from '../../utils';\n\nconst NAME_SPACE = NameSpace.DATA;\n\nconst initialState = {\n  code: null,\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.CODE:\n      return extend(state, {code: action.payload});\n  }\n\n  return state;\n};\n\nconst Operation = {\n  setCode: (code) => (dispatch, getState) => {\n      dispatch(ActionCreator.setCode(code));\n\n      fetch(`https://api.instagram.com/oauth/access_token`, {method: `POST`, body: `client_id=1576420319199590&client_secret=f1633dbb351aac66a73d763e06497079&grant_type=authorization_code&redirect_uri=https://volokhovoleg.github.io/&code=${code}`})\n          .then((response) => console.log(response))\n          .catch((error) => {\n              throw error;\n          });\n  }\n};\n\nexport {reducer, Operation, ActionType, ActionCreator};\n","import React, { useState, useEffect }  from 'react';\nimport {connect} from 'react-redux';\nimport {getCode} from '../../reducer/data/selectors'\nimport {Operation as DataOperation} from '../../reducer/data/data';\n\nconst App = ({setCode, code}) => {\n    const redirect = () => {\n        fetch(`https://api.instagram.com/oauth/authorize?client_id=1576420319199590&redirect_uri=https://volokhovoleg.github.io/&scope=user_profile,user_media&response_type=code`)\n            .then((response) => {\n                window.open(response.url);\n            })\n            .catch((error) => {\n                throw error;\n            });\n    };\n\n    useEffect(() => {\n        const checkCode = () =>\n            new URLSearchParams(window.location.search).has(`code`)\n            && setCode(new URLSearchParams(window.location.search).get(`code`));\n        checkCode();\n    }, [])\n\n    return <>\n      <button onClick={()=> {\n          redirect();\n      }} type={\"button\"}>Получить данные инсты</button>\n    </>;\n};\n\nconst mapStateToProps = (state) => ({\n    code: getCode(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    setCode(code) {\n        dispatch(DataOperation.setCode(code));\n    }\n});\n\nexport {App};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {combineReducers} from 'redux';\nimport {reducer as data} from './data/data';\nimport NameSpace from './name-space';\n\nexport default combineReducers({\n  [NameSpace.DATA]: data,\n});\n","import React from 'react';\nimport App from './components/App/App.jsx';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport reducer from './reducer/reducer';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n    reducer,\n    composeWithDevTools(\n        applyMiddleware(thunk.withExtraArgument())\n    )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}